swagger: "2.0"
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
basePath: /
schemes:
  - http
paths:
  /api/login:
    post:
      summary: Authenticates user and returns Bearer login token
      operationId: "Login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/auth"
      responses:
        "200":
            schema:
                $ref: "#/definitions/auth_token"
        "401":
            description: "Incorrect username or password"
            schema:
                $ref: "#/definitions/auth_wrong_password"
  /api/pickups:
    get:
      summary: Returns list of medical pickups
      operationId: getPickups
      produces:
      - "application/json"
      responses:
        "200":
            schema:
                $ref: "#/definitions/pickupList"
  /api/pickup:
    get:
      summary: Returns list of medical pickups
      operationId: getPickup
      produces:
      - "application/json"
      parameters:
        - in: path
          name: pickup_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
            schema:
                $ref: "#/definitions/pickup"
        "400":
            schema:
                $ref: "#/definitions/pick_up_parameter_required"
        "404":
            schema:
                $ref: "#/definitions/pickup_id_not_found"
  /api/test:
    get:
      summary: Returns test with provided test ID
      operationId: getTest
      produces:
      - "application/json"
      parameters:
        - in: path
          name: test_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
            schema:
                $ref: "#/definitions/test"
        "400":
            schema:
                $ref: "#/definitions/test_id_parameter_required"
        "404":
            schema:
                $ref: "#/definitions/test_id_not_found"
  /api/contact:
    get:
      summary: Returns contact with provided contact ID
      operationId: getContact
      produces:
      - "application/json"
      parameters:
        - in: path
          name: contact_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
            schema:
                $ref: "#/definitions/contact"
        "400":
            schema:
                $ref: "#/definitions/contact_parameter_required"
        "404":
            schema:
                $ref: "#/definitions/contact_id_not_found"
                        
definitions:
    auth:
        type: "object"
        properties:
            username:
                type: "string"
                example: "admin"
            password: 
                type: "string"
                example: "password"

    auth_token:
        type: "object"
        properties:
            access_token:
                type: "string"
                example: "Generated access token"
                
    auth_wrong_password:
        type: "object"
        properties:
            error:
                type: "string"
                example: "AuthenticationError"
            message:
                type: "string"
                example: "The username and/or password are incorrect"
            status_code:
                type: "integer"
                example: 401
    pick_up_parameter_required:
        type: "object"
        properties:
            message:
                type: "string"
                example: "Parameter required: pickup_id"
            status_code:
                type: "integer"
                example: 400
    pickup_id_not_found:
        type: "object"
        properties:
            message:
                type: "string"
                example: "No pick up with that ID could be found"
            status_code:
                type: "integer"
                example: 404
    contact_parameter_required:
        type: "object"
        properties:
            message:
                type: "string"
                example: "Parameter required: contact_id"
            status_code:
                type: "integer"
                example: 400
    contact_id_not_found:
        type: "object"
        properties:
            message:
                type: "string"
                example: "No contact up with that ID could be found"
            status_code:
                type: "integer"
                example: 404
    test_id_not_found:
        type: "object"
        properties:
            message:
                type: "string"
                example: "No test with that ID could be found"
            status_code:
                type: "integer"
                example: 404
    test_id_parameter_required:
        type: "object"
        properties:
            message:
                type: "string"
                example: "Parameter required: test_id"
            status_code:
                type: "integer"
                example: 400
    pickup:
        type: "object"
        properties:
          pickup_id:
              type: "string"
              example: "UUID of pickup"
          test_id:
              type: "string"
              example: "UUID of test"
          patient_id:
              type: "string"
              example: "UUID of patient"
          drug_id:
              type: "string"
              example: "UUID of patient"
          drug_quantity:
              type: "integer"
              example: 3
          scheduled_date:
              type: "date"
              example: "2021-01-26"
          review_date:
              type: "date"
              example: "2021-01-26"
          authorisation_status:
              type: "string"
              example: "authorised"
          pickup_status:
              type: "string"
              example: "AWAITING_PICKUP"
    test:
        type: "object"
        properties:
          test_id:
              type: "string"
              example: "UUID of test"
          drug_id:
              type: "string"
              example: "UUID of drug"
          status:
              type: "string"
              example: "COMPLETED"
    contact:
        type: "object"
        properties:
          contact_id:
              type: "string"
              example: "UUID of contact"
          phone_number:
              type: "string"
              example: "07123456789"
          email_address:
              type: "string"
              example: "gp@nhs.gov"
          address_line_1:
            type: "string"
            example: "Address line 1"
          address_line_2:
            type: "string"
            example: "Address line 2"
          address_line_3:
            type: "string"
            example: "Address line 3"
          address_line_4:
            type: "string"
            example: "Address line 4"
          postcode:
            type: "string"
            example: "NG11 8NS"
    pickupList:
        type: "object"
        properties:
          pickup_id:
            type: "string"
            example: "UUID of pickup"
            drug_quantity:
              type: "integer"
              example: 3
          scheduled_date:
              type: "date"
              example: "2021-01-26"
          review_date:
              type: "date"
              example: "2021-01-26"
          authorisation_status:
              type: "string"
              example: "authorised"
          pickup_status:
              type: "string"
              example: "AWAITING_PICKUP"